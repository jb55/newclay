import show.(show);
import __primitives__.*;

#Foo?('T) = 'T == Int8 or 'T == Int64;

define foo;
overload foo(x:'T) | Foo?('T) = x;
overload foo(x:Char) = x;
overload foo(#'a') = 'a';
overload foo(#'X') | staticError("I AM ERROR.") {}

main() {
    show(
        #defined?(-> foo(1_i8)),  // true
        #defined?(-> foo(1_i64)), // true
        #defined?(-> foo(1)),     // false
        #defined?(-> foo('a')),   // true
        #defined?(-> foo(#'a')),  // true
        #defined?(-> foo(#'b')),  // false
        #defined?(-> foo(#'X')),  // false
    );
}

