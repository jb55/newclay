
import io.transformers.(SlicedUpto);
import show.(show);

define FibonacciIterator as RecordType(a:Int, b:Int, max:Int);
overload FibonacciIterator(max:Int) = FibonacciIterator(0, 1, max);

overload hasFront?(s:FibonacciIterator) = s.b < s.max;
overload front(s:FibonacciIterator) = s.b;
overload incFront(ref s:FibonacciIterator) {
    var a, b = s.b, s.a + s.b;
    s.a, s.b <-- a, b; // XXX multi assignment
}

main() {
    for (n in FibonacciIterator(10))
        show(n);
    show("--");
    for (n in SlicedUpto(FibonacciIterator(10), 0))
        show(n);
    show("--");
    for (n in SlicedUpto(FibonacciIterator(10), 1))
        show(n);
    show("--");
    for (n in SlicedUpto(FibonacciIterator(10), 5))
        show(n);
    show("--");
    for (n in SlicedUpto(FibonacciIterator(10), 6))
        show(n);
    show("--");
    for (n in SlicedUpto(FibonacciIterator(10), 7))
        show(n);
}
