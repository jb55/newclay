import unsafe.coordinates.(begin, end);
import unsafe.valuesemantics.*;
import show.*;

main() {
    show(#defined?(-> Array[Int,1](1))); ////true
    show(#defined?(-> Array[Int,3](1, 2, 3))); ////true
    show(#defined?(-> Array[Int,2](1, 2u))); ////false

    var x = Array[Int,3](2, 4, 6);

    show(#type(-> x)); ////Array[Int, 3]
    show(#BitwiseZeroInitialized?(type(-> x))); ////true

    show(size(x)); ////3

    ////2
    ////4
    ////6
    for (i in x)
        show(i);

    x[1] = 5;

    ////2
    ////5
    ////6
    for (i in x)
        show(i);

    var y = Array[Int, 3]();
    show(#type(-> y)); ////Array[Int, 3]
    show(x == y); ////false
    show(y < x); ////true

    show(size(y)); ////3

    ////0
    ////0
    ////0
    for (i in y)
        show(i);

    var z = Array[Int, 3](2, 5, 6);

    show(size(z)); ////3
    show(#type(-> z)); ////Array[Int, 3]
    show(x == z); ////true
    show(x < z); ////false

    show(begin(x) < end(x)); ////true
    show(end(x) - begin(x)); ////3
    show(end(x) - begin(x) == Int(size(x))); ////true
    show(begin(x) + size(x) == end(x)); ////true
    show(end(x) - size(x) == begin(x)); ////true

    show(begin(x)[0]); ////2
    show(begin(x)[1]); ////5
    show(begin(x)[2]); ////6

    show(end(x)[-3]); ////2
    show(end(x)[-2]); ////5
    show(end(x)[-1]); ////6
}
