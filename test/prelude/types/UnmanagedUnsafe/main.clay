import unsafe.compositetypes.*;
import show.(show);
import unsafe.valuesemantics.(destroy, Unmanaged);

define Foo as CompositeType(i:Int);

overload Foo(i:Int) { show("initialized"); return initializeRecord(Foo, i); }
overload copy(x:Foo) { show("copied"); return copyRecord(x); }
overload destroy(x:Foo) { show("destroyed"); destroyRecord(x); }

main() {
    var x = Unmanaged[Foo](3);
    var y = x;
    var z = Unmanaged[Foo](4);
    show((*x).i);
    show((*y).i);
    show((*z).i);
    z = x;
    show((*z).i);
}
