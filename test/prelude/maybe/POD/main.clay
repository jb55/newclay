import show.*;

maybeDiv(a:Int, b:Int) = if (b == 0) nothing(Int) else just(a div b);

main() {
    var a = just(2);
    var b = nothing(Char);

    show(just?(a)); ////true
    show(nothing?(a)); ////false
    show(required(a)); ////2

    ////just:
    ////2
    maybe(a,
        (x) -> { show("just:"); show(x); },
            -> { show("nothing");        },
    );

    show(just?(b)); ////false
    show(nothing?(b)); ////true

    ////nothing
    maybe(b,
        (x) -> { show("just:"); show(x); },
            -> { show("nothing"); },
    );

    maybe(a, (x) -> { show("a"); }); ////a
    maybe(b, (x) -> { show("b"); });

    show(maybe(a, (x) -> "just a", -> "nothing a")); ////just a
    show(maybe(b, (x) -> "just b", -> "nothing b")); ////nothing b

    var z = bind(just(24),
        (x) -> (show(x); maybeDiv(x,  4)), ////24
        (x) -> (show(x); maybeDiv(x,  3)), ////6
        (x) -> (show(x); maybeDiv(x,  2)), ////2
        (x) -> (show(x); maybeDiv(x,  1)), ////1
        (x) -> (show(x); maybeDiv(x,  0)), ////1
        (x) -> (show(x); maybeDiv(x, -1)),
        (x) -> (show(x); maybeDiv(x, -2)),
    );

    show(just?(z)); ////false
    show(nothing?(z)); ////true
}
