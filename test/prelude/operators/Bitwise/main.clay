import show.*;
import unsafe.casts.(bitcast);

main() {
    // defined bitwise operations
    show(#defined?(-> bitand(0xFF, 0x7F))); ////true
    show(#defined?(-> bitand(0xFF, 0x7Fu))); ////true
    show(#defined?(-> bitand(0xFFu, 0x7F))); ////true
    show(#defined?(-> bitand(0xFFu, 0x7Fu))); ////true

    // nondefined bitwise operations
    show(#defined?(-> bitand(1.0, 0x7F))); ////false
    show(#defined?(-> bitand(0x7F, 1.0))); ////false
    show(#defined?(-> bitand(1.0, 1.0))); ////false

    // bitwise results
    show(bitand(0xffff_u16, 0xff_u8)); ////255
    show(bitand(0x7fff_i16, -1_i8)); ////32767
    show(bitand(0xffffu, -1)); ////65535
    show(bitor(0x1, 0x2)); ////3
    show(bitor(0x1, 0x2, 0xC)); ////15
    show(bitxor(0x1, 0x11)); ////16
    show(bitnot(0xffff_fffe_u32)); ////1

    show(bitandc(0xffffu, 0xff00u)); ////255

    show(bitshl(5, 2)); ////20
    show(bitshr(23, 2)); ////5
    show(bitrol(0x7f_u8, 1)); ////254
    show(bitror(0xfe_u8, 1)); ////127

    // bitcast
    show(bitcast(Float32, 0x3f80_0000_u32)); ////1
}
