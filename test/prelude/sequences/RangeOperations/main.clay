import unsafe.memory.*;
import unsafe.coordinates.*;
import io.transformers.(Enumerated);
import show.*;

main() {
    const SIZE = 4u;

    var a = allocateUninitializedValues(SIZE, UInt);
    var b = allocateUninitializedValues(SIZE, UInt);
    var c = allocateUninitializedValues(SIZE, UInt);

    try {
        for (i, ref x in Enumerated(CoordinateRange(a, a+SIZE)))
            x = i;

        copyRange(b, a, a + SIZE);

        ////0
        ////1
        ////2
        ////3
        for (x in CoordinateRange(b, b+SIZE))
            show(x);

        moveRvalueNonoverlappingRange(c, b, b + SIZE);

        ////0
        ////1
        ////2
        ////3
        for (x in CoordinateRange(c, c+SIZE))
            show(x);

        moveRvalueRange(b, b+1, b+SIZE);

        ////1
        ////2
        ////3
        ////3
        for (x in CoordinateRange(b, b+SIZE))
            show(x);

        moveRvalueRange(c+1, c, c+SIZE-1);

        ////0
        ////0
        ////1
        ////2
        for (x in CoordinateRange(c, c+SIZE))
            show(x);

        assignRange(c, a, a+SIZE);

        c = reallocateUninitializedValues(SIZE*2u, c);

        copyRange(c+SIZE, c, c+SIZE);

        ////0
        ////1
        ////2
        ////3
        ////0
        ////1
        ////2
        ////3
        for (x in CoordinateRange(c, c+SIZE*2u))
            show(x);
    } catch (ex) {
        show(ex);
    }

    freeUninitializedValues(c);
    freeUninitializedValues(b);
    freeUninitializedValues(a);
}
