import show.(show);
import unsafe.compositetypes.*;
import unsafe.valuesemantics.*;

define ValueSemanticsLogger as CompositeType(tag:Int);

overload #BitwiseMoved?(ValueSemanticsLogger) = false;
overload destroy(ref x:ValueSemanticsLogger)    { show("destroy", x.tag); }
overload reset(ref x:ValueSemanticsLogger)      { show("reset",   x.tag); }
overload moveRvalue(ref x:ValueSemanticsLogger) --> returned:ValueSemanticsLogger {
    show("move", x.tag);
    returned.tag <-- x.tag;
}
overload copy(x:ValueSemanticsLogger) --> returned:ValueSemanticsLogger {
    show("copy", x.tag + 1);
    returned.tag <-- x.tag + 1;
}
overload ValueSemanticsLogger(tag:Int) {
    show("initialize", tag);
    return initializeRecord(ValueSemanticsLogger, tag);
}

