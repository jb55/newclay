
//
// sequence comparison
//

equalSequence?(x, y) inline {
    var xi = iterator(x), yi = iterator(y);
    while (hasFront?(xi) and hasFront?(yi)) {
        if (front(xi) != front(yi))
            return false;
        incFront(xi);
        incFront(yi);
    }
    return hasFront?(xi) == hasFront?(yi);
}

lesserSequence?(x, y) inline {
    var xi = iterator(x), yi = iterator(y);
    while (hasFront?(xi) and hasFront?(yi)) {
        const xe = front(xi), ye = front(yi);
        if (xe < ye)
            return true;
        if (ye < xe)
            return false;
        incFront(xi);
        incFront(yi);
    }
    return hasFront?(xi) < hasFront?(yi);
}


//
// captureSequence: return an iterator over an lvalue sequence, or move an rvalue sequence
//

captureSequence(forward s:'S) inline | Sequence?('S) = forward iterator(s);
overload captureSequence(forward s:'S) inline | Iterator?('S) = forward s;
overload captureSequence(rvalue s:'S) inline | Sequence?('S) and not Source?('S)
    = rvalue s;
