import sequences.(lesserSequence?);
import strings.encodings.(stringTypeEncoding, stringBytes);
import strings.encodings.utf8.(UTF8, UTF8Decoder);
import unsafe.coordinates.(ContiguousCoordinate, CoordinateRange);

define StringConstant as RecordType(
    size:UInt,
    begin:ContiguousCoordinate[UInt8],
    end:ContiguousCoordinate[UInt8],
);


//
// StringConstant as sequence
//

overload source(s:StringConstant) = UTF8Decoder(CoordinateRange(s.begin, s.end));
overload size(s:StringConstant) = s.size;

overload #stringTypeEncoding(StringConstant) = UTF8;
overload stringBytes(s:StringConstant) = CoordinateRange(s.begin, s.end);

overload lesser?(a:StringConstant, b:StringConstant)
    = lesserSequence?(stringBytes(a), stringBytes(b));

// since StringConstants are uniqued at compile time, record equality
// suffices to test StringConstant equality


//
// disable StringConstant default initializer
//

overload StringConstant();

