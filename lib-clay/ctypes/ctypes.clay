import meta.platform.*;
import libc.(strlen);
import unsafe.casts.(pointerCast);
import unsafe.coordinates.(begin, end, ContiguousCoordinate, CoordinateRange);

private define cLongType;
overload #cLongType() = Int64;
overload #cLongType()
    | platformFamilyName() == "windows" or platformCPUPointerBits == 32
    = Int32;

private define cULongType;
overload #cULongType() = UInt64;
overload #cULongType()
    | platformFamilyName() == "windows" or platformCPUPointerBits == 32
    = UInt32;

alias CChar  = Int8;
alias CShort = Int16;
alias CInt   = Int32;
alias CLongLong = Int64;
alias CUChar  = UInt8;
alias CUShort = UInt16;
alias CUInt   = UInt32;
alias CULongLong = UInt64;

var CLong  = #cLongType();
var CULong = #cULongType();

alias CSizeT = UInt;
alias CPtrdiffT = UInt;
alias CIntPtrT = Int;

define CString as NewType(Pointer[CChar]);

overload CString(c:ContiguousCoordinate[CChar])
    = CString(pointerCast(Pointer[CChar], c));
overload CString(s:StringConstant) = CString(pointerCast(Pointer[CChar], s.begin));

overload begin(s:CString) = ContiguousCoordinate(*s);
overload end(s:CString) = ContiguousCoordinate(*s) + size(s);
overload size(s:CString) = strlen(s);

